var documenterSearchIndex = {"docs":
[{"location":"mirtcat/#MirtCat","page":"MirtCat","title":"MirtCat","text":"","category":"section"},{"location":"mirtcat/","page":"MirtCat","title":"MirtCat","text":"CurrentModule = RIrtWrappers.require_mirtcat()","category":"page"},{"location":"mirtcat/","page":"MirtCat","title":"MirtCat","text":"Wraps the mirtCAT R package.","category":"page"},{"location":"mirtcat/","page":"MirtCat","title":"MirtCat","text":"make_mirtcat\nMirtCatDesign\nStatefulMirtCat\nStatefulMirtCatNoRollbacks\nStatefulMirtCatWithRollbacks","category":"page"},{"location":"mirtcat/#MirtCat.make_mirtcat","page":"MirtCat","title":"MirtCat.make_mirtcat","text":"make_mirtcat(\n    mirt_params;\n    criteria,\n    method,\n    start_item,\n    design\n)\n\n\nMakes an MirtCatDesign object from the given mirt_params which can be any supported implementation for [FittedItemBanks.AbstractItemBank)[@ref] or a raw R object supported by mirtCAT's mo argument.\n\nThe criteria, method, start_item and design arguments will be passed directly to R mirtCAT function.\n\nThe return value is tuple of the MirtCatDesign object, and the raw R object passed as the mo argument for the item bank.\n\n\n\n\n\n","category":"function"},{"location":"mirtcat/#MirtCat.MirtCatDesign","page":"MirtCat","title":"MirtCat.MirtCatDesign","text":"mutable struct MirtCatDesign{T}\n\nA type wrapping an mirtCAT mirtCAT_design object.\n\n\n\n\n\n","category":"type"},{"location":"mirtcat/#MirtCat.StatefulMirtCat","page":"MirtCat","title":"MirtCat.StatefulMirtCat","text":"abstract type StatefulMirtCat <: ComputerAdaptiveTesting.Stateful.StatefulCat\n\nSupertype for StatefulMirtCatNoRollbacks and StatefulMirtCatWithRollbacks\n\n\n\n\n\n","category":"type"},{"location":"mirtcat/#MirtCat.StatefulMirtCatNoRollbacks","page":"MirtCat","title":"MirtCat.StatefulMirtCatNoRollbacks","text":"struct StatefulMirtCatNoRollbacks{T} <: MirtCat.StatefulMirtCat\n\nStatefulMirtCatWithRollbacks(design::MirtCatDesign) -> StatefulMirtCatWithRollbacks\n\nAdapter type for MirtCatDesign into a ComputerAdaptiveTesting.Stateful implementation. This implementation does not support rollbacks.\n\n\n\n\n\n","category":"type"},{"location":"mirtcat/#MirtCat.StatefulMirtCatWithRollbacks","page":"MirtCat","title":"MirtCat.StatefulMirtCatWithRollbacks","text":"struct StatefulMirtCatWithRollbacks{T} <: MirtCat.StatefulMirtCat\n\nStatefulMirtCatWithRollbacks(design::MirtCatDesign) -> StatefulMirtCatWithRollbacks\n\nAdapter type for MirtCatDesign into a ComputerAdaptiveTesting.Stateful implementation supporting rollbacks. This implementation uses deep copies to support rollbacks an may consume a lot of memory.\n\n\n\n\n\n","category":"type"},{"location":"mirt/#Mirt","page":"Mirt","title":"Mirt","text":"","category":"section"},{"location":"mirt/","page":"Mirt","title":"Mirt","text":"Wraps the mirt R package.","category":"page"},{"location":"mirt/","page":"Mirt","title":"Mirt","text":"Modules = [RIrtWrappers.Mirt]","category":"page"},{"location":"mirt/#RIrtWrappers.Mirt","page":"Mirt","title":"RIrtWrappers.Mirt","text":"This module wraps the mirt R module. See mirt on CRAN.\n\nAll fit_* functions return a tuple of the form (item_bank, labels) where\n\nitem_bank is a concrete subtype of FittedItemBanks.AbstractItemBank\nlabels is a Vector{String} of item labels\n\nIf return_raw is set to true, the functions will return a tuple of the form (item_bank, labels, irt_model) where irt_model is the raw R object.\n\nAny keyword arguments passed to the fit_* functions are directly to the mirt function.\n\n\n\n\n\n","category":"module"},{"location":"mirt/#RIrtWrappers.Mirt.fit_2pl-Tuple{Any}","page":"Mirt","title":"RIrtWrappers.Mirt.fit_2pl","text":"fit_2pl(df; return_raw, kwargs...)\n\n\nFit a 2PL model to the data in df.\n\nReturns a FittedItemBanks.ItemBank2PL.\n\n\n\n\n\n","category":"method"},{"location":"mirt/#RIrtWrappers.Mirt.fit_3pl-Tuple{Any}","page":"Mirt","title":"RIrtWrappers.Mirt.fit_3pl","text":"fit_3pl(df; return_raw, kwargs...)\n\n\nFit a 3PL model to the data in df.\n\nReturns a FittedItemBanks.ItemBank3PL.\n\n\n\n\n\n","category":"method"},{"location":"mirt/#RIrtWrappers.Mirt.fit_4pl-Tuple{Any}","page":"Mirt","title":"RIrtWrappers.Mirt.fit_4pl","text":"fit_4pl(df; return_raw, kwargs...)\n\n\nFit a 4PL model to the data in df.\n\nReturns a FittedItemBanks.ItemBank4PL.\n\n\n\n\n\n","category":"method"},{"location":"mirt/#RIrtWrappers.Mirt.fit_gpcm-Tuple{Any}","page":"Mirt","title":"RIrtWrappers.Mirt.fit_gpcm","text":"fit_gpcm(df; return_raw, kwargs...)\n\n\nFit a Generalized Partial Credit Model (GPCM) to the data in df.\n\nReturns a FittedItemBanks.GPCMItemBank.\n\n\n\n\n\n","category":"method"},{"location":"mirt/#RIrtWrappers.Mirt.fit_mirt_2pl-Tuple{Any, Any}","page":"Mirt","title":"RIrtWrappers.Mirt.fit_mirt_2pl","text":"fit_mirt_2pl(df, dims; return_raw, kwargs...)\n\n\nFit a 2PL MIRT model to the data in df.\n\nReturns a FittedItemBanks.ItemBankMirt2PL.\n\n\n\n\n\n","category":"method"},{"location":"mirt/#RIrtWrappers.Mirt.fit_monopoly-Tuple{Any}","page":"Mirt","title":"RIrtWrappers.Mirt.fit_monopoly","text":"fit_monopoly(df; return_raw, monopoly_k, kwargs...)\n\n\nFit a monotonic polynomial IRT model to the data in df.\n\nReturns a FittedItemBanks.MonopolyItemBank.\n\n\n\n\n\n","category":"method"},{"location":"mirt/#RIrtWrappers.Mirt.fit_spline-Tuple{Any}","page":"Mirt","title":"RIrtWrappers.Mirt.fit_spline","text":"fit_spline(df; return_raw, spline_args, kwargs...)\n\n\nFit a B-spline IRT model to the data in df.\n\nReturns a FittedItemBanks.BSplineItemBank.\n\n\n\n\n\n","category":"method"},{"location":"kernsmoothirt/#KernSmoothIRT","page":"KernSmoothIRT","title":"KernSmoothIRT","text":"","category":"section"},{"location":"kernsmoothirt/","page":"KernSmoothIRT","title":"KernSmoothIRT","text":"Wraps the KernSmoothIRT R package.","category":"page"},{"location":"kernsmoothirt/","page":"KernSmoothIRT","title":"KernSmoothIRT","text":"Modules = [RIrtWrappers.KernSmoothIRT]","category":"page"},{"location":"kernsmoothirt/#RIrtWrappers.KernSmoothIRT","page":"KernSmoothIRT","title":"RIrtWrappers.KernSmoothIRT","text":"This module wraps the mirt R module. See mirt on CRAN.\n\nAll fit_* functions return a tuple of the form (item_bank, labels) where\n\nitem_bank is a concrete subtype of FittedItemBanks.AbstractItemBank\nlabels is a Vector{String} of item labels\n\nIf return_raw is set to true, the functions will return a tuple of the form (item_bank, labels, irt_model) where irt_model is the raw R object.\n\nAny keyword arguments passed to the fit_* functions are directly to the mirt function.\n\n\n\n\n\n","category":"module"},{"location":"kernsmoothirt/#RIrtWrappers.KernSmoothIRT.fit_ks_dichotomous-Tuple{Any}","page":"KernSmoothIRT","title":"RIrtWrappers.KernSmoothIRT.fit_ks_dichotomous","text":"fit_ks_dichotomous(\n    df;\n    return_raw,\n    kwargs...\n) -> Union{Tuple{FittedItemBanks.DichotomousSmoothedItemBank{P, FittedItemBanks.KernelSmoother{typeof(FittedItemBanks.gauss_kern)}} where P<:FittedItemBanks.DichotomousPointsItemBank, Any}, Tuple{FittedItemBanks.DichotomousSmoothedItemBank{P, FittedItemBanks.KernelSmoother{typeof(FittedItemBanks.gauss_kern)}} where P<:FittedItemBanks.DichotomousPointsItemBank, Any, RCall.RObject}}\n\n\nFit a kernel smoothed dichotomous IRT model to the data in df.\n\nReturns a FittedItemBanks.DichotomousSmoothedItemBank using the FittedItemBanks.gauss_kern FittedItemBanks.KernelSmoother.\n\n\n\n\n\n","category":"method"},{"location":"#RIrtWrappers.jl","page":"Home","title":"RIrtWrappers.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = RIrtWrappers","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package wraps some R packages for fitting IRT models and running CATs.","category":"page"},{"location":"#Fitting-IRT-models","page":"Home","title":"Fitting IRT models","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The KernSmoothIRT and Mirt modules wrap R libraries for fitting IRT models.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The models are returned as item banks as in FitttedItemBanks.jl. The inputs are response matrices, in the same format as provided by ItemResponseDatasets.jl. In particular a DataFrames.DataFrame with questions as columns and respondents as rows, with outcomes 0-based integer coded.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For example:","category":"page"},{"location":"","page":"Home","title":"Home","text":"4×4 DataFrame\n   Row │ Q1     Q2     Q3     Q4\n       │ Int64  Int64  Int64  Int64\n───────┼───────────────────────────\n     1 │     1      1      0      0\n     2 │     1      0      1      0\n     3 │     1      1      1      1\n     4 │     1      1      0      1","category":"page"},{"location":"#Running-CATs","page":"Home","title":"Running CATs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The MirtCat module wraps an R library for simulating and administering CATs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"You need to use the following method to get ahold of the module.","category":"page"},{"location":"","page":"Home","title":"Home","text":"require_mirtcat","category":"page"},{"location":"#RIrtWrappers.require_mirtcat","page":"Home","title":"RIrtWrappers.require_mirtcat","text":"require_mirtcat() -> Module\n\n\nReturns the MirtCat extension module. Requires the ComputerAdaptiveTesting module in your environment.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"The main objects from these always implement the ComputerAdaptiveTesting.Stateful interface.","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
